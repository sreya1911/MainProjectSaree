// Code Generated by Sidekick is for learning and experimentation purposes only.

import React from "react";
import { Card, Row, Col, Button, Alert, Form } from "react-bootstrap";
import { useCart } from "./CartContext";
import { useNavigate } from "react-router-dom";
import { FaTrash } from "react-icons/fa";
import { useAuth } from "./AuthContext";
import "./Cart.css"; // Import custom CSS for additional styling

const Cart = () => {
  const {
    cart,
    removeFromCart,
    decreaseQuantity,
    increaseQuantity,
    notification,
  } = useCart();
  const { user, setRedirectPath } = useAuth();
  const navigate = useNavigate();

  const handleBuy = (product) => {
    if (user) {
      navigate("/buy", { state: { product } });
    } else {
      alert("Please log in to proceed with the purchase.");
      setRedirectPath("/buy");
      navigate("/login");
    }
  };

  return (
    <div className="cart-container">
      <h1 style={{top:0}}>Shopping Cart</h1>
      {notification && <Alert variant="success">{notification}</Alert>}
      <Row>
        {cart.length > 0 ? (
          cart.map((product, index) => (
            <Col xs={12} key={index} className="mb-4">
              <Card className="d-flex flex-row position-relative cart-item">
                <Card.Img
                  variant="top"
                  src={require(`../assets/${product.images[0]}`)}
                  alt={product.name}
                  className="cart-item-image"
                />
                <Card.Body>
                  <Card.Title>{product.name}</Card.Title>
                  <Card.Text className="text-success">In stock</Card.Text>
                  <Card.Text>Eligible for FREE Shipping</Card.Text>
                  <Form.Check type="checkbox" label="This will be a gift" />
                  <Card.Text className="text-danger">
                    Total: ${(product.price * product.quantity).toFixed(2)}
                  </Card.Text>
                  <div className="quantity-control">
                    <Button
                      variant="light"
                      onClick={() => decreaseQuantity(product)}
                      className="cart-button"
                    >
                      {" "}
                      -{" "}
                    </Button>
                    <span className="quantity">{product.quantity}</span>
                    <Button
                      variant="light"
                      onClick={() => increaseQuantity(product)}
                      className="cart-button"
                    >
                      {" "}
                      +{" "}
                    </Button>
                    <FaTrash
                      className="cart-trash-icon"
                      onClick={() => removeFromCart(product)}
                    />
                  </div>
                  <Button
                    variant="warning"
                    onClick={() => handleBuy(product)}
                    className="buy-button"
                  >
                    Buy Now
                  </Button>
                </Card.Body>
              </Card>
            </Col>
          ))
        ) : (
          <Col xs={12}>
            <p>Your cart is empty.</p>
          </Col>
        )}
      </Row>
    </div>
  );
};

export default Cart;
